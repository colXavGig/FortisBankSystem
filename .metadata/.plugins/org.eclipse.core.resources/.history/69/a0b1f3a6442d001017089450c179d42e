package client.bankClient.accountManager;

import java.awt.LayoutManager;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

import javax.swing.JPanel;

import bus.BusinessException;
import bus.model.account.BankAccount;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JComboBox;
import javax.swing.DefaultComboBoxModel;
import bus.model.transaction.ClientTransactionType;
import bus.model.transaction.Transaction;

import java.awt.CardLayout;
import javax.swing.JButton;

public class TransactionMakerView extends JPanel {
	
	private BankAccount account;
	private BankAccountManagerView parentView;
	
	private JComboBox<ClientTransactionType> type_comboBox;
	private JPanel switchContainer;
	private CardLayout panelSwitcher;
	
	
	

	public TransactionMakerView(BankAccountManagerView parent, List<BankAccount> accounts) {
		setLayout(null);
		
		JLabel lblNewLabel = new JLabel("Transaction type:");
		lblNewLabel.setBounds(47, 41, 98, 14);
		add(lblNewLabel);
		
		panelSwitcher = new CardLayout();
		
		switchContainer = new JPanel();
		switchContainer.setBounds(47, 81, 350, 139);
		add(switchContainer);
		switchContainer.setLayout(panelSwitcher);
		
		parentView = parent;
		
		var depositView = new DepositView();
		switchContainer.add(depositView, ClientTransactionType.Deposit.name());
		
		var withdrawView = new WithdrawView();
		switchContainer.add(withdrawView, ClientTransactionType.Withdraw.name());
		
		var transferView = new TransferView(accounts);
		switchContainer.add(transferView, ClientTransactionType.Transfer.name());

		type_comboBox = new JComboBox<ClientTransactionType>();
		type_comboBox.setModel(new DefaultComboBoxModel<ClientTransactionType>(ClientTransactionType.values()));
		type_comboBox.setBounds(153, 39, 98, 18);
		type_comboBox.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				JOptionPane.showMessageDialog(null, "test");
				
				var selectedType = type_comboBox.getItemAt(type_comboBox.getSelectedIndex());
				
				panelSwitcher.show(switchContainer, selectedType.name());
			}
		});
		add(type_comboBox);
		
		JButton makeBtn = new JButton("Make transaction");
		makeBtn.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				var selectedType = type_comboBox.getItemAt(type_comboBox.getSelectedIndex());

				Transaction transaction = null;
				if (selectedType == ClientTransactionType.Deposit) {
					transaction = depositView.generateDeposit();
				} else if (selectedType == ClientTransactionType.Withdraw) {
					transaction = withdrawView.generateWithdraw();
				} else {
					transaction = transferView.generateTransfer();
				}
				
				try {
					account.doTransaction(transaction);
				} catch (BusinessException e1) {
					JOptionPane.showInternalMessageDialog(null, "Could not apply transaction.");
					return;
				}
				JOptionPane.showConfirmDialog(null, "Transaction completed");
				parent.navBack();
			}
		});
		makeBtn.setBounds(153, 248, 129, 23);
		add(makeBtn);
		
		
	}


	public void setAccount(BankAccount account) {
		this.account = account;
	}
}
